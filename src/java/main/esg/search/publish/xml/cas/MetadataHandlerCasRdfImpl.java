/*******************************************************************************
 * Copyright (c) 2010 Earth System Grid Federation
 * ALL RIGHTS RESERVED. 
 * U.S. Government sponsorship acknowledged.
 * 
 * Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
 * 
 * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
 * 
 * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
 * 
 * Neither the name of the <ORGANIZATION> nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. 
 * IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 ******************************************************************************/
package esg.search.publish.xml.cas;

import java.util.ArrayList;
import java.util.List;

import org.jdom.Element;
import org.springframework.stereotype.Component;

import esg.search.core.Record;
import esg.search.core.RecordImpl;
import esg.search.publish.cas.CasPars;
import esg.search.publish.xml.MetadataHandler;
import esg.search.query.impl.solr.SolrXmlPars;

/**
 * Implementation of {@link MetadataHandler} 
 * to parse XML records in the RDF format generated by CAS.
 */
@Component
public class MetadataHandlerCasRdfImpl implements MetadataHandler {
	
	/**
	 * {@inheritDoc}
	 * 
	 * This method parses a full CAS XML document,
	 * which is composed of many records.
	 */
	public List<Record> parse(final Element root) {
		
		// <rdf:RDF xmlns:cas="urn:oodt:" 
		//          xmlns:edrn="urn:edrn:" 
		//          xmlns:esg="urn:esg:" 
		//          xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" 
        //			xmlns:x="http://edrn.nci.nih.gov/rdf/schema.rdf#">
		final List<Record> records = new ArrayList<Record>();
		for (final Object element : root.getChildren()) {
			records.add( parseOneRecord((Element)element) );
		}
		return records;
		
	}
	
	/**
	 * Method to parse a single CAS record
	 * @param element
	 * @return
	 */
	private Record parseOneRecord(final Element element) {

		final Record record = new RecordImpl();
				
		// <esg:LOCALGRANULEID>"MLS-Aura_L2GP-CO_v02-23-c01_2008d107.he5"</esg:LOCALGRANULEID>
		String id = element.getChildText("LOCALGRANULEID", CasPars.ESG_NS).replaceAll("\"", "");
		record.setId(id.trim());
		
		// type
		record.addField(SolrXmlPars.FIELD_TYPE, "Dataset");
		
		// <cas:Filename>MLS-Aura_L2GP-CO_v02-23-c01_2008d107.he5</cas:Filename>
		final String filename = element.getChildText("Filename", CasPars.CAS_NS).replaceAll("\"", "");
		record.addField(SolrXmlPars.FIELD_TITLE, filename);
		record.addField(SolrXmlPars.FIELD_NAME, filename);
		
		// <esg:he5 rdf:about="http://jpl-esg.jpl.nasa.gov:8080/esgprod/data?productID=b8be9bab-5c2c-11df-aa0f-251c5cfb68e2">
		final String about = element.getAttributeValue("about", CasPars.RDF_NS);
		record.addField(SolrXmlPars.FIELD_URL, about);
		
		// FIXME: hardwire project
		record.addField(SolrXmlPars.FIELD_PROJECT, "MLS");		
		
		// <esg:RANGEBEGINNINGDATE>"2008-04-16"</esg:RANGEBEGINNINGDATE>
		// <esg:RANGEBEGINNINGTIME>"00:00:00.000000Z"</esg:RANGEBEGINNINGTIME>
		// <esg:RANGEENDINGDATE>"2008-04-16"</esg:RANGEENDINGDATE>
		// <esg:RANGEENDINGTIME>"23:59:59.999999Z"</esg:RANGEENDINGTIME>
		final String beginDate = element.getChildText("RANGEBEGINNINGDATE", CasPars.ESG_NS).replaceAll("\"", "");
		final String beginTime = element.getChildText("RANGEBEGINNINGTIME", CasPars.ESG_NS).replaceAll("\"", "");
		record.addField(SolrXmlPars.FIELD_DATETIME_START, beginDate + " " + beginTime);
		final String endDate = element.getChildText("RANGEENDINGDATE", CasPars.ESG_NS).replaceAll("\"", "");
		final String endTime = element.getChildText("RANGEENDINGTIME", CasPars.ESG_NS).replaceAll("\"", "");
		record.addField(SolrXmlPars.FIELD_DATETIME_STOP, endDate + " " + endTime);

		// <esg:NORTHBOUNDINGCOORDINATE>90.0</esg:NORTHBOUNDINGCOORDINATE>
		// <esg:EASTBOUNDINGCOORDINATE>180.0</esg:EASTBOUNDINGCOORDINATE>
		// <esg:WESTBOUNDINGCOORDINATE>-180.0</esg:WESTBOUNDINGCOORDINATE>
		// <esg:SOUTHBOUNDINGCOORDINATE>-90.0</esg:SOUTHBOUNDINGCOORDINATE>
		final String north = element.getChildText("NORTHBOUNDINGCOORDINATE", CasPars.ESG_NS).replaceAll("\"", "");
		record.addField(SolrXmlPars.FIELD_NORTH, north);
		final String south = element.getChildText("SOUTHBOUNDINGCOORDINATE", CasPars.ESG_NS).replaceAll("\"", "");
		record.addField(SolrXmlPars.FIELD_SOUTH, south);
		final String east = element.getChildText("EASTBOUNDINGCOORDINATE", CasPars.ESG_NS).replaceAll("\"", "");
		record.addField(SolrXmlPars.FIELD_EAST, east);
		final String west = element.getChildText("WESTBOUNDINGCOORDINATE", CasPars.ESG_NS).replaceAll("\"", "");
		record.addField(SolrXmlPars.FIELD_WEST, west);
		
		// <cas:ProductType>he5</cas:ProductType>
		final String productType = element.getChildText("ProductType", CasPars.CAS_NS).replaceAll("\"", "");
		record.addField(SolrXmlPars.FIELD_DATA_FORMAT, productType);
		
		// <cas:FileLocation>/home/joshuaga/staging/products/mls/</cas:FileLocation>
		// <esg:LOCALVERSIONID>"c01"</esg:LOCALVERSIONID>
		
		return record;
		
	}
	

}
